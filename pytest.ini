[pytest]
minversion = 7.0
testpaths = test
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Optimized settings for better performance
addopts = 
    -ra
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    -v
    --durations=10
    --maxfail=10
    -n auto
    --dist=loadgroup
    --timeout=60
    --timeout-method=thread
    -p no:cacheprovider
    --color=yes
    --show-capture=no

# Timeout settings
timeout = 60
timeout_method = thread
timeout_func_only = true

# Markers for test organization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, require setup)
    slow: Slow tests that take more than a few seconds
    cuda: Tests that require CUDA/GPU
    requires_data: Tests that require external data files
    blender: Tests that require Blender
    blender_compatibility: Tests for Blender compatibility and error handling
    serial: Tests that must run serially (not in parallel)
    memory_intensive: Tests that use a lot of memory
    network: Tests that require network access
    skip_on_ci: Skip these tests in CI environments
    benchmark: Performance benchmark tests

# Warning filters - optimized for cleaner output
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning:torch.*
    ignore::RuntimeWarning:torch.*
    ignore:.*ast.Num.*:DeprecationWarning
    ignore:.*ast.Str.*:DeprecationWarning
    ignore:.*imp.*:DeprecationWarning
    ignore:.*NumPy 1.x.*:UserWarning
    ignore:.*numpy.core.multiarray.*:UserWarning
    ignore:.*Unable to initialise audio.*:UserWarning
    ignore:.*Viewport capture module.*:UserWarning
    ignore:.*pytest.*:UserWarning
    ignore:.*xdist.*:UserWarning
    error::ResourceWarning

# Test output options
console_output_style = progress
log_cli = false
log_cli_level = INFO 