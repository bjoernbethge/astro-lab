# Cosmic Web Prediction Training Configuration
# ============================================
# Realistic training setup for cosmic web structure prediction
# Using TNG50 simulation data and CosmicEvolutionGNN

model:
  type: cosmic_evolution # Uses CosmicEvolutionGNN from tng_models.py
  params:
    input_dim: 7 # x, y, z, mass, vx, vy, vz from TNG50
    hidden_dim: 256 # Larger for complex cosmic structures
    output_dim: 64 # Embedding dimension for cosmic web features
    num_layers: 4 # Deep enough for hierarchical structure
    cosmological_features: true # Enable cosmological parameter prediction
    redshift_encoding: true # Include redshift information
    dropout: 0.15
    use_batch_norm: true
    conv_type: "gat" # Graph Attention for cosmic web connections

data:
  dataset: tng50
  data_dir: data/raw/TNG50-4
  particle_types: ["PartType0", "PartType1", "PartType4"] # Gas, DM, Stars
  batch_size: 16 # Smaller due to large graphs
  num_workers: 4
  max_samples: 10000 # Start with manageable subset
  return_tensor: true

  # Cosmic web specific preprocessing
  box_size: 35.0 # Mpc/h for TNG50
  redshift: 0.0 # z=0 snapshot

  # Graph construction for cosmic web
  k_neighbors: 32 # More neighbors for cosmic web connectivity
  distance_threshold: 2.0 # Mpc/h connection threshold

  # Data splits
  split_ratios: [0.7, 0.15, 0.15] # train/val/test

training:
  max_epochs: 50
  learning_rate: 0.001
  weight_decay: 0.0001

  # Cosmic web specific training
  task: "cosmic_web_prediction"

  # Multi-task learning weights
  loss_weights:
    structure_prediction: 1.0 # Main cosmic web structure
    cosmological_params: 0.5 # Cosmological parameter inference
    density_field: 0.3 # Density field reconstruction

  # Advanced training techniques
  gradient_clip_val: 1.0
  accumulate_grad_batches: 4 # Effective batch size 64

  # Learning rate scheduling
  lr_scheduler:
    type: "cosine"
    warmup_epochs: 5

# Cosmic Web Prediction Tasks
tasks:
  primary:
    name: "cosmic_web_structure"
    type: "node_regression"
    target: "cosmic_web_features" # Density, connectivity, environment
    metrics: ["mse", "mae", "r2"]

  secondary:
    name: "cosmological_inference"
    type: "graph_regression"
    target: "cosmological_parameters" # Omega_m, Omega_L, h, sigma_8
    metrics: ["mse", "mae"]

  auxiliary:
    name: "density_reconstruction"
    type: "node_regression"
    target: "local_density"
    metrics: ["mse", "pearson_r"]

# Validation and Testing
validation:
  # Cosmic web specific metrics
  metrics:
    - "cosmic_web_connectivity" # How well we predict web structure
    - "filament_detection" # Ability to identify filaments
    - "void_identification" # Void detection accuracy
    - "cluster_prediction" # Galaxy cluster prediction

  # Physics-based validation
  physics_checks:
    - "mass_conservation" # Total mass should be conserved
    - "cosmological_consistency" # Predicted params should be consistent
    - "structure_hierarchy" # Hierarchical structure validation

mlflow:
  tracking_uri: ./mlruns
  experiment_name: cosmic_web_prediction_v1
  experiment_description: "Cosmic web structure prediction using TNG50 simulation"

  tags:
    model: CosmicEvolutionGNN
    data: TNG50-4
    task: cosmic_web_prediction
    scale: cosmological
    version: v1.0

# Callbacks and Monitoring
callbacks:
  early_stopping:
    patience: 10
    min_delta: 0.001
    monitor: val_cosmic_web_loss
    mode: min

  model_checkpoint:
    monitor: val_cosmic_web_loss
    mode: min
    save_top_k: 3
    save_last: true
    filename: "cosmic_web_epoch_{epoch:02d}_loss_{val_cosmic_web_loss:.4f}"

  learning_rate_monitor:
    logging_interval: epoch

  # Cosmic web specific callbacks
  cosmic_web_visualization:
    log_interval: 5 # Every 5 epochs
    plot_types: ["density_field", "connectivity_graph", "prediction_vs_truth"]

# Hyperparameter Optimization (Optional)
optimization:
  n_trials: 20
  timeout: 7200 # 2 hours
  study_name: cosmic_web_prediction_optimization
  direction: minimize

  search_space:
    learning_rate:
      type: loguniform
      low: 0.0001
      high: 0.01

    hidden_dim:
      type: categorical
      choices: [128, 256, 512]

    num_layers:
      type: int
      low: 3
      high: 6

    k_neighbors:
      type: int
      low: 16
      high: 64

    dropout:
      type: uniform
      low: 0.1
      high: 0.3

# Resource Management
resources:
  gpu: true
  mixed_precision: true # For memory efficiency
  compile_model: true # PyTorch 2.0 compilation

  # Memory optimization for large cosmic web graphs
  gradient_checkpointing: true
  pin_memory: true

# Logging and Monitoring
logging:
  level: INFO
  log_cosmic_web_metrics: true
  log_cosmological_params: true
  save_predictions: true

  # Visualization settings
  plot_cosmic_web: true
  save_density_fields: true
  create_3d_visualizations: false # Too memory intensive initially

# Reproducibility
seed: 42
deterministic: true

# Production Settings
production:
  model_registry: "cosmic_web_models"
  deployment_ready: false # Set to true when ready for inference
  inference_batch_size: 1

  # Model versioning
  version_tags:
    - "tng50_trained"
    - "cosmic_web_v1"
    - "research_model"
